
# VALHALLA SIGMA RULE SET - DEMO
# Retrieved: 2024-03-07 01:36
# Generated for User: demo
# Number of Rules: 3139
# Warning:
#     The full rule set contains rules with low level (< high) 
#     that can lead to false positives - use the Python
#     module valhallaAPI tools to retrieve a filtered set
# This is the VALHALLA demo rule set. The content represents the 'SigmaHQ' repository
# in a streamlined format.
# All rules are licensed under DRL 1.1 https://github.com/SigmaHQ/sigma/blob/master/LICENSE.Detection.Rules.md.
title: OMIGOD HTTP No Authentication RCE
id: ab6b1a39-a9ee-4ab4-b075-e83acf6e346b
status: stable
description: |
    Detects the exploitation of OMIGOD (CVE-2021-38647) which allows remote execute (RCE) commands as root with just a single unauthenticated HTTP request.
    Verify, successful, exploitation by viewing the HTTP client (request) body to see what was passed to the server (using PCAP).
    Within the client body is where the code execution would occur. Additionally, check the endpoint logs to see if suspicious commands or activity occurred within the timeframe of this HTTP request.
author: Nate Guagenti (neu5ron)
license: 'DRL 1.1 https://github.com/SigmaHQ/sigma/blob/master/LICENSE.Detection.Rules.md'
date: 2021/09/20 13:42:21
references:
  - https://www.wiz.io/blog/omigod-critical-vulnerabilities-in-omi-azure
  - https://twitter.com/neu5ron/status/1438987292971053057?s=20
logsource:
    product: zeek
    service: http
    definition: Enable the builtin Zeek script that logs all HTTP header names by
        adding "@load policy/protocols/http/header-names" to your local.zeek config
        file. The script can be seen here for reference https://github.com/zeek/zeek/blob/d957f883df242ef159cfd846884e673addeea7a5/scripts/policy/protocols/http/header-names.zeek
detection:
    condition: selection and not auth_header and not too_small_http_client_body
    auth_header:
        client_header_names|contains: AUTHORIZATION
    selection:
        method: POST
        status_code: "200"
        uri: /wsman
    too_small_http_client_body:
        request_body_len: "0"
fields:
  - id.orig_h
  - id.resp_h
  - id.resp_p
  - status_code
  - method
  - uri
  - request_body_len
  - response_body_len
  - user_agent
falsepositives:
  - Exploits that were attempted but unsuccessful.
  - Scanning attempts with the abnormal use of the HTTP POST method with no indication
    of code execution within the HTTP Client (Request) body. An example would be vulnerability
    scanners trying to identify unpatched versions while not actually exploiting the
    vulnerability. See description for investigation tips.
level: high
customer: 'demo'
modified: 2019/09/20
tags:
  - attack.privilege_escalation
  - attack.initial_access
  - attack.execution
  - attack.lateral_movement
  - attack.t1068
  - attack.t1190
  - attack.t1203
  - attack.t1021.006
  - attack.t1210
  - DEMO
