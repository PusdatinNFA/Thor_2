
# VALHALLA SIGMA RULE SET - DEMO
# Retrieved: 2024-03-07 01:36
# Generated for User: demo
# Number of Rules: 3139
# Warning:
#     The full rule set contains rules with low level (< high) 
#     that can lead to false positives - use the Python
#     module valhallaAPI tools to retrieve a filtered set
# This is the VALHALLA demo rule set. The content represents the 'SigmaHQ' repository
# in a streamlined format.
# All rules are licensed under DRL 1.1 https://github.com/SigmaHQ/sigma/blob/master/LICENSE.Detection.Rules.md.
title: Potential Privileged System Service Operation - SeLoadDriverPrivilege
id: f63508a0-c809-4435-b3be-ed819394d612
status: test
description: |
    Detects the usage of the 'SeLoadDriverPrivilege' privilege. This privilege is required to load or unload a device driver.
    With this privilege, the user can dynamically load and unload device drivers or other code in to kernel mode.
    This user right does not apply to Plug and Play device drivers.
    If you exclude privileged users/admins and processes, which are allowed to do so, you are maybe left with bad programs trying to load malicious kernel drivers.
    This will detect Ghost-In-The-Logs (https://github.com/bats3c/Ghost-In-The-Logs) and the usage of Sysinternals and various other tools. So you have to work with a whitelist to find the bad stuff.
author: xknow (@xknow_infosec), xorxes (@xor_xes)
license: 'DRL 1.1 https://github.com/SigmaHQ/sigma/blob/master/LICENSE.Detection.Rules.md'
date: 2019/04/08 00:28:21
references:
  - https://blog.dylan.codes/evading-sysmon-and-windows-event-logging/
  - https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4673
logsource:
    product: windows
    service: security
detection:
    condition: selection_1 and not 1 of filter_*
    filter_endswith:
        ProcessName|endswith:
          - \procexp64.exe
          - \procexp.exe
          - \procmon64.exe
          - \procmon.exe
          - \Google\Chrome\Application\chrome.exe
          - \AppData\Local\Microsoft\Teams\current\Teams.exe
    filter_exact:
        ProcessName:
          - C:\Windows\System32\Dism.exe
          - C:\Windows\System32\rundll32.exe
          - C:\Windows\System32\fltMC.exe
          - C:\Windows\HelpPane.exe
          - C:\Windows\System32\mmc.exe
          - C:\Windows\System32\svchost.exe
          - C:\Windows\System32\wimserv.exe
          - C:\Windows\System32\RuntimeBroker.exe
          - C:\Windows\System32\SystemSettingsBroker.exe
          - C:\Windows\explorer.exe
    filter_startswith:
        ProcessName|startswith: C:\Program Files\WindowsApps\Microsoft
    selection_1:
        EventID: "4673"
        PrivilegeList: SeLoadDriverPrivilege
        Service: '-'
falsepositives: Other legimate tools loading drivers. Including but not limited to,
    Sysinternals, CPU-Z, AVs etc. A baseline needs to be created according to the
    used products and allowed tools. A good thing to do is to try and exclude users
    who are allowed to load drivers.
level: medium
customer: 'demo'
modified: 2023/01/20
tags:
  - attack.defense_evasion
  - attack.t1562.001
  - DEMO
